<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="Button.Static.Background" Color="{DynamicResource ColorBtnBackground}"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="{DynamicResource ColorBtnMouseOver}"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="{DynamicResource ColorBtnBackground}"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="{DynamicResource ColorBtnDisable}"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="{DynamicResource ColorBtnDisableForegound}"/>
    <Style x:Key="AtmbxButtonStyle" TargetType="Button">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource Button.Disabled.Foreground}" />
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundOnPrimaryBrushKey}" />
            </Trigger>-->
        </Style.Triggers>
        <Setter Property="Background" Value="{DynamicResource BtnBackgroundBrushKey}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource BtnForegroundBrushKey}"/>
        <Setter Property="FontFamily" Value="{DynamicResource AutumnBox.Font}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="RootElement">
                        
                        <VisualStateManager.VisualStateGroups>

                            <!--Define the states for the common states.
          The states in the VisualStateGroup are mutually exclusive to
          each other.-->
                            <VisualStateGroup x:Name="CommonStates">

                                <!--The Normal state is the state the button is in
            when it is not in another state from this VisualStateGroup.-->
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderBrush" 
                              Storyboard.TargetProperty="Color" To="{DynamicResource ColorBtnBackground}" />
                                    </Storyboard>
                                </VisualState>

                                <!--Change the SolidColorBrush, BorderBrush, to red when the
            mouse is over the button.-->
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Storyboard.TargetName="BorderBrush" 
                              Storyboard.TargetProperty="Color" To="{DynamicResource ColorBtnMouseOver}" />
                                    </Storyboard>
                                </VisualState>

                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimation 
                                            Storyboard.TargetName="BorderBrush"
                              Storyboard.TargetProperty="Color" To="{DynamicResource ColorBtnDisable}" />
                                    </Storyboard>

                                </VisualState>
                                <!--Change the SolidColorBrush, BorderBrush, to Transparent when the
            button is pressed.-->
                                <VisualState x:Name="Pressed">
                                    <Storyboard >
                                        <ColorAnimation Storyboard.TargetName="BorderBrush" 
                              Storyboard.TargetProperty="Color" To="Transparent"/>
                                    </Storyboard>
                                </VisualState>
                                <!--The Disabled state is omitted for brevity.-->
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>
                        <!--Create the SolidColorBrush for the Background 
                      as an object elemment and give it a name so 
                      it can be referred to elsewhere in the control template.-->
                        <Border.Background>
                            <SolidColorBrush x:Name="BorderBrush" Color="Transparent"/>
                        </Border.Background>
                        
                        
                        <!--Create a border that has a different color by adding smaller grid.
                      The background of this grid is specificied by the button's Background
                      property.-->
                        <Grid Background="{TemplateBinding Background}">
                            
                            <!--Use a ContentPresenter to display the Content of
                        the Button.-->
                            <ContentPresenter
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Margin="4,5,4,4" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>